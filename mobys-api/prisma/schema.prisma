// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id           Int           @id @default(autoincrement())
  logo         String        @db.Text
  name         String
  status       Status        @default(ACTIVE)
  type         CompanyType
  address      String
  phone        String
  email        String
  dec          String?       @db.Text
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  users        User[]
  marbleBlocks MarbleBlock[]
  orders       Order[]
}

model Order {
  id            Int         @id @default(autoincrement())
  status        Status      @default(ACTIVE)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
  customerId    Int
  customer      Company     @relation(fields: [customerId], references: [id])
  marbleBlockId Int
  marbleBlock   MarbleBlock @relation(fields: [marbleBlockId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  surname   String
  password  String
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  companyId Int
  company   Company  @relation(fields: [companyId], references: [id])
}

model MarbleBlock {
  id                Int                @id @default(autoincrement())
  x                 Float
  y                 Float
  z                 Float
  weight            Float
  colors            Json
  status            Status             @default(ACTIVE)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
  marbleBlockImages MarbleBlockImage[]
  companyId         Int
  company           Company            @relation(fields: [companyId], references: [id])
  orders            Order[]
  order             Boolean            @default(false)
}

model MarbleBlockImage {
  id            Int           @id @default(autoincrement())
  image         String
  type          BlockPosition
  status        Status        @default(ACTIVE)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now()) @updatedAt
  marbleBlockId Int
  marbleBlock   MarbleBlock   @relation(fields: [marbleBlockId], references: [id])
}

enum BlockPosition {
  TOP
  BOTTOM
  FRONT
  BACK
  LEFT
  RIGHT
}

enum Status {
  ACTIVE
  PASSIVE
  DELETED
}

enum CompanyType {
  SUPPLIER
  CUSTOMER
}
